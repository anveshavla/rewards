{"ast":null,"code":"var _jsxFileName = \"/Users/anvesh/Documents/Learning/hands on projects/rewards/src/Compute3.js\";\nimport React, { Component } from 'react';\nimport data from './data.json';\nexport default class Compute2 extends React.Component {\n  constructor(props) {\n    super();\n\n    this.groupBy = (data, key) => {\n      return data.reduce((accumulator, current) => {\n        if (current[key] in accumulator) {\n          accumulator[current[key]].push(current);\n        } else {\n          accumulator[current[key]] = [current];\n        }\n\n        return accumulator;\n      }, {});\n    };\n\n    this.addUniqueMonths = () => {\n      var months = new Set();\n      var transaction = '';\n\n      for (trasaction in data) {\n        months.add(trasaction.month);\n      }\n    };\n\n    this.calculate = () => {\n      var result = {};\n      var months = this.addUniqueMonths();\n      const groupedData = this.groupBy(data, \"customerId\");\n      var customerId = '';\n\n      for (customerId in groupedData) {\n        groupedData[customerId] = this.groupBy(groupedData[customerId], \"month\");\n      }\n\n      console.log(\"final : \", groupedData);\n\n      for (customerId in groupedData) {\n        var month = '';\n\n        for (month in groupedData[customerId]) {\n          months.add(month);\n          console.log(\"customerId : \", customerId, \"month : \", month, \"data: \", groupedData[customerId][month], \"length : \" + groupedData[customerId][month].length);\n\n          for (var i = 0; i < groupedData[customerId][month].length; i++) {\n            var rewards = 0;\n\n            if (groupedData[customerId][month][i].price > 100) {\n              rewards = (groupedData[customerId][month][i].price - 100) * 2 + 50;\n            } else if (groupedData[customerId][month][i].price > 50 && groupedData[customerId][month][i].price <= 100) {\n              rewards = groupedData[customerId][month][i].price - 50;\n            }\n\n            console.log(\"state before : \", result); //rewards = groupedData[customerId][month][i].price;\n\n            if (customerId in result) {\n              console.log(\"customerId in state: \", customerId, \"state before : \", result);\n\n              if (month in result[customerId]) {\n                console.log(\"month in state: \", month, \"state before : \", result);\n                result[customerId[0]][month] = result[customerId][0][month] + rewards;\n                result[customerId][1].total = result[customerId][1].total + rewards; //this.state[customerId][month] =  this.state[customerId][month] + rewards;\n\n                console.log(\"month in state: \", month, \"state after : \", result);\n              } else {\n                console.log(\"month not in state: \", month, \"state before : \", result);\n                result[customerId][0][month] = rewards;\n                result[customerId][1].total = result[customerId][1].total + rewards;\n                console.log(\"month not in state: \", month, \"state after : \", result); //this.state[customerId][month] =  rewards;\n              }\n            } else {\n              console.log(\"customerId not in state: \", customerId, \"state before : \", result, \"rewards\", rewards, \"month\", month);\n              result[customerId] = [{\n                [month]: rewards\n              }];\n              result[customerId][1] = {\n                total: rewards\n              }; //[customerId] : \"a\"\n\n              console.log(\"customerId not in state: \", customerId, \"state after : \", result); //this.state[customerId][month] =  rewards;  \n            } //this.state[customerId].total = this.state[customerId].total+ rewards;\n\n          }\n        }\n      }\n      /*for(x in groupedData){\n        if(this.state.price>100){\n            this.setState({rewards : (this.state.price-100) * 2 + 50}); \n        }\n        else if(this.state.price>50 && this.state.price<=100){\n            this.setState({rewards : this.state.price-50});\n        }\n      }*/\n\n\n      console.log(\"d\", this.state);\n    };\n\n    this.calculate2 = () => {\n      console.log(\"d\", this.state.c1);\n    };\n\n    this.state = {};\n    /*this.state = data*/\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.calculate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Get Price\"), this.state.rewards);\n  }\n\n}","map":{"version":3,"sources":["/Users/anvesh/Documents/Learning/hands on projects/rewards/src/Compute3.js"],"names":["React","Component","data","Compute2","constructor","props","groupBy","key","reduce","accumulator","current","push","addUniqueMonths","months","Set","transaction","trasaction","add","month","calculate","result","groupedData","customerId","console","log","length","i","rewards","price","total","state","calculate2","c1","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport data from './data.json';\n\nexport default class Compute2 extends React.Component\n{\n    constructor(props){\n        super();\n        this.state = {};\n          /*this.state = data*/;          \n    }\n\n    groupBy = (data,key)=>{\n        return data.reduce((accumulator,current)=>{\n         if(current[key] in accumulator){\n             accumulator[current[key]].push(current)\n         }\n         else\n         {\n             accumulator[current[key]] = [current]\n         }\n         return accumulator;\n        },{});\n    }\n\n    addUniqueMonths = ()=>{\n        var months = new Set();\n        var transaction = '';\n        for(trasaction in data){\n            months.add(trasaction.month)\n        } \n    }\n    calculate = () => { \n      var result = {};\n      var months = this.addUniqueMonths();  \n      const groupedData = this.groupBy(data, \"customerId\");\n\n      var customerId = ''\n      for (customerId in groupedData){\n        groupedData[customerId] = this.groupBy(groupedData[customerId],\"month\");\n      }\n      console.log(\"final : \",groupedData);\n      \n      for(customerId in groupedData){\n          var month = ''\n          for(month in groupedData[customerId])\n          {\n            months.add(month);  \n            console.log(\"customerId : \", customerId, \"month : \", month, \"data: \", groupedData[customerId][month], \"length : \"+groupedData[customerId][month].length);\n\n          for(var i =0;i<groupedData[customerId][month].length;i++){\n          var rewards = 0;\n          if(groupedData[customerId][month][i].price>100){\n            rewards = (groupedData[customerId][month][i].price-100) * 2 + 50; \n            }\n          else if(groupedData[customerId][month][i].price>50 && groupedData[customerId][month][i].price<=100){\n            rewards = groupedData[customerId][month][i].price-50\n            }\n            console.log(\"state before : \",result)\n            //rewards = groupedData[customerId][month][i].price;\n          if(customerId in result){ \n            console.log(\"customerId in state: \", customerId, \"state before : \", result);\n\n              if(month in result[customerId]){\n                console.log(\"month in state: \", month, \"state before : \", result);\n\n                \n                result[customerId[0]][month] = result[customerId][0][month] + rewards\n                result[customerId][1].total = result[customerId][1].total + rewards\n                //this.state[customerId][month] =  this.state[customerId][month] + rewards;\n                console.log(\"month in state: \", month, \"state after : \", result);\n\n              }\n              else{\n                console.log(\"month not in state: \", month, \"state before : \", result);\n\n                \n                result[customerId][0][month] = rewards\n                result[customerId][1].total = result[customerId][1].total + rewards;\n               \n                console.log(\"month not in state: \", month, \"state after : \", result);\n\n                //this.state[customerId][month] =  rewards;\n              }\n          }\n          else{\n            console.log(\"customerId not in state: \", customerId, \"state before : \", result, \"rewards\", rewards, \"month\", month);\n         \n            \n            result[customerId] = [{[month] : rewards}]\n            result[customerId][1] = {total : rewards}    \n               //[customerId] : \"a\"\n            \n            console.log(\"customerId not in state: \", customerId, \"state after : \", result);\n            \n            //this.state[customerId][month] =  rewards;  \n          }\n          \n            //this.state[customerId].total = this.state[customerId].total+ rewards;\n          }\n        }\n      }\n\n      /*for(x in groupedData){\n        if(this.state.price>100){\n            this.setState({rewards : (this.state.price-100) * 2 + 50}); \n        }\n        else if(this.state.price>50 && this.state.price<=100){\n            this.setState({rewards : this.state.price-50});\n        }\n      }*/\n      console.log(\"d\" , this.state);\n    }\n    calculate2 = ()=>{\n        console.log(\"d\" , this.state.c1);\n    }\n\n    render(){\n        return (\n        <div>\n            <button onClick={this.calculate}>Get Price</button>    \n            {this.state.rewards}</div>\n        );\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}