{"ast":null,"code":"var _jsxFileName = \"/Users/anvesh/Documents/Learning/hands on projects/rewards/src/Display.js\";\nimport React, { Component } from 'react';\nimport data from './data.json';\nexport default class Display extends React.Component {\n  render() {\n    const data = this.props.result;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, Object.keys(data).map((customer, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }\n      }, \"Customer Id : \", customer, \" \"), Object.keys(data[customer]).map((rewards, index2) => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 32\n          }\n        }, data[customer][rewards]);\n      }));\n    }));\n  }\n\n}\n/*return (\n      \n    <table>\n      {\n        Object.keys(data).map((customer,index)=>{\n            \n            return(Object.keys(data[customer][0]).map((month,index)=>{\n              return <td>{data[customer][0][month]}</td>       \n            })\n            )\n            \n            \n        })\n      }\n\n    </table>    \n    \n  );\n\n\n\n  \n\n<ul>\n{\n  Object.keys(data).map((customer,index)=>(\n     \n        data[customer].map((rewards,index2)=>(\n\n          \n         <p>{index2} Total Rewards :  {rewards.total}</p>\n        )\n      )\n  ))\n}\n\n</ul> \n\n\n<ul>\n  {\n    Object.keys(data).map((customer,index)=>{\n        return(\n          <div>\n          <li>Customer Id : {customer} </li>\n          {\n          data[customer].map((rewards,index2)=>{\n          \n          if(index2===0){\n            return(<ul>{Object.keys(rewards).map((month,index3)=>{\n              return <li> {month} Month Rewards - {rewards[month]} points</li>\n            })}</ul>)\n          }       \n          return <div><li>Total Rewards for {customer} : {rewards.total} points</li><br/></div>\n  \n        })}\n        </div>\n        )\n    })\n  }\n\n</ul>    */","map":{"version":3,"sources":["/Users/anvesh/Documents/Learning/hands on projects/rewards/src/Display.js"],"names":["React","Component","data","Display","render","props","result","Object","keys","map","customer","index","rewards","index2"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACC,SAA5B,CACf;AACIG,EAAAA,MAAM,GAAE;AACJ,UAAMF,IAAI,GAAG,KAAKG,KAAL,CAAWC,MAAxB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,GAAlB,CAAsB,CAACC,QAAD,EAAUC,KAAV,KAAkB;AACpC,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA+BD,QAA/B,MADA,EAGAH,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACQ,QAAD,CAAhB,EAA4BD,GAA5B,CAAgC,CAACG,OAAD,EAASC,MAAT,KAAkB;AAClD,4BAAO;AAAI,UAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBX,IAAI,CAACQ,QAAD,CAAJ,CAAeE,OAAf,CAAlB,CAAP;AACC,OAFD,CAHA,CADA;AASH,KAVD,CAFR,CADJ;AAiBH;;AApBL;AAuBA","sourcesContent":["import React, {Component} from 'react';\nimport data from './data.json';\n\nexport default class Display extends React.Component\n{\n    render(){\n        const data = this.props.result\n        return (\n            <table>\n                {\n                    Object.keys(data).map((customer,index)=>{\n                        return(\n                        <tr>\n                        <td key={index}>Customer Id : {customer} </td>\n                        {\n                        Object.keys(data[customer]).map((rewards,index2)=>{  \n                        return <td key={index2}>{data[customer][rewards]}</td>\n                        })}\n                        </tr>\n                        )\n                    })\n                }\n            </table>  \n        )\n    }\n}\n\n/*return (\n      \n    <table>\n      {\n        Object.keys(data).map((customer,index)=>{\n            \n            return(Object.keys(data[customer][0]).map((month,index)=>{\n              return <td>{data[customer][0][month]}</td>       \n            })\n            )\n            \n            \n        })\n      }\n\n    </table>    \n    \n  );\n\n\n\n  \n\n<ul>\n{\n  Object.keys(data).map((customer,index)=>(\n     \n        data[customer].map((rewards,index2)=>(\n\n          \n         <p>{index2} Total Rewards :  {rewards.total}</p>\n        )\n      )\n  ))\n}\n\n</ul> \n\n\n<ul>\n  {\n    Object.keys(data).map((customer,index)=>{\n        return(\n          <div>\n          <li>Customer Id : {customer} </li>\n          {\n          data[customer].map((rewards,index2)=>{\n          \n          if(index2===0){\n            return(<ul>{Object.keys(rewards).map((month,index3)=>{\n              return <li> {month} Month Rewards - {rewards[month]} points</li>\n            })}</ul>)\n          }       \n          return <div><li>Total Rewards for {customer} : {rewards.total} points</li><br/></div>\n  \n        })}\n        </div>\n        )\n    })\n  }\n\n</ul>    */"]},"metadata":{},"sourceType":"module"}