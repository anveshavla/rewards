{"ast":null,"code":"var _jsxFileName = \"/Users/anvesh/Documents/Learning/hands on projects/rewards/src/Compute.js\";\nimport React, { Component } from 'react';\nimport data from './data.json';\nexport default class Compute extends React.Component {\n  constructor(props) {\n    super();\n\n    this.groupBy = (data, key) => {\n      return data.reduce((accumulator, current) => {\n        if (current[key] in accumulator) {\n          accumulator[current[key]].push(current);\n        } else {\n          accumulator[current[key]] = [current];\n        }\n\n        return accumulator;\n      }, {});\n    };\n\n    this.calculate = () => {\n      const groupedData = this.groupBy(data, \"customerId\");\n      var customerId = '';\n\n      for (customerId in groupedData) {\n        groupedData[customerId] = this.groupBy(groupedData[customerId], \"month\");\n        console.log(\"obj + \", groupedData[customerId]);\n      }\n\n      console.log(\"final : \", groupedData);\n\n      for (customerId in groupedData) {\n        var month = '';\n\n        for (month in groupedData[customerId]) {\n          console.log(\"customerId : \", customerId, \"month : \", customerId, \"data: \", groupedData[month][customerId]);\n          var rewards = 0;\n\n          if (this.state[customerId][month].price > 100) {\n            rewards = (this.state[customerId][month].price - 100) * 2 + 50;\n          } else if (this.state[customerId][month].price > 50 && this.state[customerId][month].price <= 100) {\n            rewards = this.state[customerId][month].price - 50;\n          }\n\n          if (customerId in this.state) {} else {\n            this.state[customerId][month] = rewards;\n          }\n        }\n      }\n\n      for (x in groupedData) if (this.state.price > 100) {\n        this.setState({\n          rewards: (this.state.price - 100) * 2 + 50\n        });\n      } else if (this.state.price > 50 && this.state.price <= 100) {\n        this.setState({\n          rewards: this.state.price - 50\n        });\n      }\n    };\n\n    this.calculate2 = () => {\n      console.log(\"d\", this.state.c1);\n    };\n\n    this.state = {\n      c1: {\n        Jan: 0,\n        Feb: 0,\n        Mar: 0,\n        Total: 0\n      },\n      c2: {\n        Jan: 0,\n        Feb: 0,\n        Mar: 0,\n        Totla: 0\n      }\n    }\n    /*this.state = data*/\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.calculate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Get Price\"), this.state.rewards);\n  }\n\n}","map":{"version":3,"sources":["/Users/anvesh/Documents/Learning/hands on projects/rewards/src/Compute.js"],"names":["React","Component","data","Compute","constructor","props","groupBy","key","reduce","accumulator","current","push","calculate","groupedData","customerId","console","log","month","rewards","state","price","x","setState","calculate2","c1","Jan","Feb","Mar","Total","c2","Totla","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport data from './data.json';\n\nexport default class Compute extends React.Component\n{\n    constructor(props){\n        super();\n        this.state = {c1 : {Jan : 0, Feb : 0, Mar : 0, Total : 0},\n                      c2 : {Jan : 0, Feb : 0, Mar : 0, Totla : 0}  \n                    }\n          /*this.state = data*/;          \n    }\n\n    groupBy = (data,key)=>{\n        return data.reduce((accumulator,current)=>{\n         if(current[key] in accumulator){\n             accumulator[current[key]].push(current)\n         }\n         else\n         {\n             accumulator[current[key]] = [current]\n         }\n         return accumulator;\n        },{});\n    }\n\n    calculate = () => { \n      const groupedData = this.groupBy(data, \"customerId\");\n      var customerId = ''\n      for (customerId in groupedData){\n        groupedData[customerId] = this.groupBy(groupedData[customerId],\"month\");\n        console.log(\"obj + \", groupedData[customerId]);\n      }\n      console.log(\"final : \",groupedData);\n      \n      for(customerId in groupedData){\n          var month = ''\n          for(month in groupedData[customerId])\n          {\n          console.log(\"customerId : \", customerId, \"month : \", customerId, \"data: \", groupedData[month][customerId]);\n          var rewards = 0\n          if(this.state[customerId][month].price>100){\n            rewards = (this.state[customerId][month].price-100) * 2 + 50; \n            }\n          else if(this.state[customerId][month].price>50 && this.state[customerId][month].price<=100){\n            rewards = this.state[customerId][month].price-50\n            }\n          if(customerId in this.state){\n            \n          }\n          else{\n            this.state[customerId][month] =  rewards;   \n          }\n          }\n      }\n\n      for(x in groupedData)\n        if(this.state.price>100){\n            this.setState({rewards : (this.state.price-100) * 2 + 50}); \n        }\n        else if(this.state.price>50 && this.state.price<=100){\n            this.setState({rewards : this.state.price-50});\n        }\n    }\n\n    calculate2 = ()=>{\n        console.log(\"d\" , this.state.c1);\n    }\n    render(){\n        return (\n        <div>\n            <button onClick={this.calculate}>Get Price</button>    \n            {this.state.rewards}</div>\n        );\n    }    \n}"]},"metadata":{},"sourceType":"module"}